<html lang="en">
	<head>
		<meta charset="utf-8">

		<title>A simple gest.js demo that displays the gesture direction on screen</title>

		<meta name = "description" content = "gest.js is a webcam based gesture recognition library that helps developers build more immersive webpages">
		<meta name = "author" content = "Hadi Michael (http://hadi.io)">
		
		<!-- include js -->
		<!-- Chart CDN -->
		<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>
		<script src='/static/js/gest.js'></script>
		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
		<!-- <script src="/static/js/jsRev.js" type="text/javascript"></script> -->
		<link rel="stylesheet" type="text/css" href="/static/css/style.css">
	</head>

	<body>
		<div class="stage" style='display: inline-block'>
			<h1 style='color:white; line-height:500px; font-size: 90pt;'id="timer"></h1>
			<h1 style='color:red; line-height:500px; font-size: 70pt;'id="type"></h1>
			<h1 id='score' style='color: white; position: relative; top: 450px; border-top: 1px solid white; padding-top: 5px;'>0</h1>
		</div> 
		<!-- add controls in audio tag to see control bar -->
		<audio id='audio'> 
			<source src='/static/img/music.mp3' type='audio/mpeg'>
		</audio>
		
		<div id="controls" style='width:300px;'>
			<img id="left" src="/static/img/arrows/staticLeft.png">
			<img id="up" src="/static/img/arrows/staticUp.png">
			<img id="down" src="/static/img/arrows/staticDown.png">
			<img id="right" src="/static/img/arrows/staticRight.png">
		</div> 
		<div id='buttons' style='display: inline-block; width: 200px; position: absolute; bottom: 400px; left: 600px;'>
			<div id='scoreboard'></div>
			<select id='difficulty'>
				<option>easy</option>
				<option>medium</option>
				<option>hard</option>
				<option>legendary</option>
			</select>
			<select id='mode'>
				<option>normal</option>
				<option>motion</option>
			</select>
			<button id='start'>Start</button>
		</div>
		<canvas id="myChart" width="400" height="400"></canvas>

		<script type ="text/javascript" src="/socket.io/socket.io.js"></script>

		<script>
			$(document).ready(function() {
				var socket = io.connect();
				var name = prompt('What is your name?');
				socket.emit('new_user', {name: name})
			})
		</script>
		<script> 
		var recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition)();
				recognition.lang = 'en-US';
				recognition.interimResults = false;
				recognition.maxAlternatives = 5;
				// recognition.continuous = true;
				recognition.start();
				recognition.onresult = function(event) {
					console.log(event.results[event.results.length - 1][0].transcript);
					if (event.results[event.results.length - 1][0].transcript == 'difficulty easy'|| 
						event.results[event.results.length - 1][0].transcript == 'difficulty medium'|| 
						event.results[event.results.length - 1][0].transcript == 'difficulty hard'|| 
						event.results[event.results.length - 1][0].transcript == 'difficulty legendary'
						) {
							console.log(event.results[event.results.length - 1][0].transcript);

							var arr = event.results[event.results.length - 1][0].transcript.split(' ');
							console.log(arr)
						$("#difficulty").val(arr[1])
					}
					if (event.results[event.results.length - 1][0].transcript == 'normal mode'|| 
						event.results[event.results.length - 1][0].transcript == 'motion mode'
						) {
							var arr = event.results[event.results.length - 1][0].transcript.split(' ');

						$("#mode").val(arr[0])
					}
					if (event.results[event.results.length - 1][0].transcript == 'start game'
						) {
							$('#start').click();
					}
					// if (event.results[event.results.length - 1][0].transcript == 'search Google'
					// 	) {
					// 		var arr = event.results[event.results.length - 1][0].transcript.split(' ');
					// 	window.location.url = arr[1]
					// }
					recognition.onend = function() {
						recognition.start();
					}
				}
		</script>
		<script type="text/javascript">
			//create message container
			var messageContainer = document.createElement('div');
			messageContainer.className = 'gest-message';
			document.body.appendChild(messageContainer);
			
			var styles = {
				positioning: 'margin: 22% auto; min-width: 100px; max-width: 400px; width: 80%; padding: 15px;',
				copy: 'font: normal 35px/1.1 \"Helvetica Neue\", Helvetica, Arial, sans-serif; color: #fff; font-size: 45px; text-align: center;',
				general: 'display: block; background-color: #000; z-index: 100; border-radius: 10px;'
			},
				messageContainerStyle = styles.positioning + styles.copy + styles.general;
	
			// gest.options.subscribeWithCallback(function(gesture) {
			// 	var message = '';
			// 	if (gesture.direction) {
			// 		message = gesture.direction;
			// 		console.log(gesture.direction)
			// 	} else {
			// 		message = gesture.error.message;
			// 	} 

			// 	messageContainer.innerHTML = '<p style=\"margin:0\">' + message + '</p>';
			// 	messageContainer.setAttribute('style', messageContainerStyle);

			// 	window.setTimeout(function() {
			// 		messageContainer.setAttribute('style', 'display: none;');
			// 	}, 3000);
			// });

			// gest.start();

		// 'notes' to store Arrows  
var notes = [];


// ==== CLASS FOR ARROWS ==== //

// 1. Direction of arrows
// 2. jQuery img that links to direction bottom
// 3. Destroy when it arrow gets to the 
// 4. Explode when arrow gets to the bottom

// Class Arrow
function Arrow(direction) {

	// CSS spacings for the arrows //
	var xPos = null;

	if (direction == 'left') {
		xPos = '115px'
	} else if (direction == 'up') {
		xPos = '182px'
	} else if (direction == 'down') {
		xPos = '252px'
	} else if (direction == 'right') {
		xPos = '322px'
	}

	this.direction = direction;
	this.image = $("<img src='/static/img/arrows/" + direction + ".gif'/>");

	this.image.css({
		position: "absolute",
		top: "450px",
		left: xPos
	});

	$('.stage').append(this.image);

}// ends CLASS Arrow

// To enable animating the arrows
Arrow.prototype.step = function(speed) {

	// Controls the speed of the arrows
	this.image.css("top", speed);

};

// Deletes arrows when they get to bottom of page
Arrow.prototype.destroy = function() {
	// removes the image of the DOM
	this.image.remove();
	// Removes the note/arrow from memory/array
	notes.splice(0,1);
};

// Explodes arrow when hit
Arrow.prototype.explode = function() {
	this.image.remove();
	notes.splice(0,1);
};



// For random arrows
var randNum = 0;

// Frame increasing
var frame = 0;

// Determines the speed of notes
var arrowSpawnRate = 10;


// Random generator for arrows
function randomGen() {

	// Randomizes between 1 and 4
	r = Math.floor(Math.random() * 4) + 1;
	if (r === 1) {
		notes.push(new Arrow("left"));
	} else if (r === 2) {
		notes.push(new Arrow("right"));
	} else if (r === 3) {
		notes.push(new Arrow("up"));	
	} else if (r === 4) {
		notes.push(new Arrow("down"));
	}

}// ends randomGen()


// Render function //
function render(arrowSpawnRate, speed) {
	if (frame++ % arrowSpawnRate === 0) {
		randomGen();
	}
	// Animate arrows showering down //
	for (var i = 0; i < notes.length; i++ ) {
		notes[i].step(speed);

		// Check for cleanup
		if (notes[i].image.position().top < -10) {

			notes[i].destroy();

		}

	}

}// ends render()



// jQuery to animate arrows //
$(document).ready(function () {
	hitTypes = {
		'PERFECT': 0,
		'GREAT': 0,
		'GOOD': 0,
		'COOL': 0,
		'BAD': 0,
		'MISS': 0
	}

	var hitTypes = {
			'PERFECT': 0,
			'GREAT': 0,
			'GOOD': 0,
			'COOL': 0,
			'BAD': 0,
			'MISS': 0
	}
	// // shim layer with setTimeout fallback
	// window.requestAnimFrame = (function() {

	// 	return window.requestAnimationFrame ||

	// 	window.webkitRequestAnimationFrame ||

	// 	window.mozRequestAnimationFrame ||

	// 	function(callback) {

	// 		window.setTimeout(callback, 40 / 75);

	// 	};

	// })();

	/*	place the rAF *before* the render() 
		to assure as close to 60fps with the 
		setTimeout fallback.					*/

	// Infinte loop for game play
	// (function animloop() {

	// 	requestAnimFrame(animloop);

	// 	render();

	// })();// ends (function animloop() )



	$('#start').on('click', function() {
		i = 5;
		var game = setInterval(function() {
			i--;
			console.log(i)
			if (i == 4) {
				$('#timer').html("READY!")	
			} else if (i > 0) {
				$('#timer').html(i)
			} else {
				$('#timer').html('')
				$('#start').attr('disabled', true)
			}
			if (i == 0) {
				var counter = 0;
				var loop = setInterval(function() {
					counter++
					// console.log("Counter = ", counter)
					if (counter == 850) {
						$('#timer').html('3');
					} else if (counter == 900) {
						$('#timer').html('2');
					} else if (counter == 950) {
						$('#timer').html('1');
					}
					if (counter < 1000) {
						$('#audio')[0].play();
						if ($('#difficulty').val() == 'easy') {
							spawnRate = 100;
							speed = '-=2px'
						} else if ($('#difficulty').val() == 'medium') {
							spawnRate = 40;
							speed = '-=4px'
						} else if ($('#difficulty').val() == 'hard') {
							spawnRate = 20;
							speed = '-=6px'
						} else if ($('#difficulty').val() == 'legendary') {
							spawnRate = 10;
							speed = '-=10px'
						}
						render(spawnRate, speed);
					} else {
						$('#timer').html('');
						$('.stage').html('')
						$('#audio')[0].pause();
						$('#audio')[0].currentTime = 0;
						clearInterval(loop)
						// create chart
						var ctx = document.getElementById("myChart").getContext('2d');
						var myChart = new Chart(ctx, {
							type: 'doughnut',
							data: {
								labels: ["Miss", "Bad", "Cool", "Good", "Great", "Perfect"],
								datasets: [{
									label: '# of Votes',
									data: [hitTypes['MISS'], hitTypes['BAD'], hitTypes['COOL'], hitTypes['GOOD'],hitTypes['GREAT'], hitTypes['PERFECT']],
									backgroundColor: [
										'rgb(124, 121, 122, 0.2)',
										'rgba(54, 162, 235, 0.2)',
										'rgba(255, 206, 86, 0.2)',
										'rgba(255, 99, 132, 0.2)',
										'rgba(75, 192, 192, 0.2)',
										'rgba(153, 102, 255, 0.2)',
									],
									borderColor: [
										'rgb(124, 121, 122, 1)',
										'rgba(54, 162, 235, 1)',
										'rgba(255, 206, 86, 1)',
										'rgba(255, 99, 132, 1)',
										'rgba(75, 192, 192, 1)',
										'rgba(153, 102, 255, 1)',
									],
									borderWidth: 1
								}]
							},
							options: {
								responsive: true,
								maintainAspectRatio: false,
							}
						});
						$('#start').attr('disabled', false);
					}
				}, 20, counter);
			}
			if (i == -1) {
				clearInterval(game);
			}
		}, 1000)
	})
	$('#start').on('click', function() {
				function hitbox (type, points) {
					$('#type').html(type)
					if (streak) {
						score+= points;
					}
					hitTypes[type]++;
					streak = true;
					notes[0].explode();
					score+=10;
				}
			if ($('#mode').val() == 'motion') {
				var score = 0;
				var streak = false;
				gest.options.subscribeWithCallback(function(gesture) {
					$('#scoreboard').html(
					'<p>PERFECT: '+ hitTypes['PERFECT'] + '</p>' +
					'<p>GREAT: '+ hitTypes['GREAT'] + '</p>' +
					'<p>GOOD: '+ hitTypes['GOOD'] + '</p>' +
					'<p>COOL: '+ hitTypes['COOL'] + '</p>' +
					'<p>BAD: '+ hitTypes['BAD'] + '</p>' +
					'<p>MISS: '+ hitTypes['MISS'] + '</p>' 
					)	
					console.log(gesture.direction)
					console.log(score)	
					console.log(notes)
					$('#timer').html('');
					$("#type").html('')
					$('#score').html(score)

					if(notes[0]) {
						if (gesture.direction == 'Left' && notes[0].direction == "left") {
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}
						} else if ((gesture.direction == 'Up' || gesture.direction == 'Long up') && notes[0].direction == "up") {
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}
						} else if ((gesture.direction == 'Down' || gesture.direction == 'Long down') && notes[0].direction == "down") {
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}
						} else if (gesture.direction == 'Right' && notes[0].direction == "right") {
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								hitTypes['MISS']++;
								$("#type").html('MISS')
								streak = false;
								score -=10;
							}
						} else {
							console.log(gesture.direction)
							hitTypes['MISS']++;
							$("#type").html('MISS')
							score-=10;
						} 
					}
					// var message = '';
					// if (gesture.direction) {
					// 	message = gesture.direction;
					// 	console.log(gesture.direction)
					// } else {
					// 	message = gesture.error.message;
					// } 

					// messageContainer.innerHTML = '<p style=\"margin:0\">' + message + '</p>';
					// messageContainer.setAttribute('style', messageContainerStyle);

					// window.setTimeout(function() {
					// 	messageContainer.setAttribute('style', 'display: none;');
					// }, 3000);
				}, streak);
				gest.start();
			} else if ($('#mode').val() == 'normal') {
				$('#scoreboard').html(
						'<p>PERFECT: '+ hitTypes['PERFECT'] + '</p>' +
						'<p>GREAT: '+ hitTypes['GREAT'] + '</p>' +
						'<p>GOOD: '+ hitTypes['GOOD'] + '</p>' +
						'<p>COOL: '+ hitTypes['COOL'] + '</p>' +
						'<p>BAD: '+ hitTypes['BAD'] + '</p>' +
						'<p>MISS: '+ hitTypes['MISS'] + '</p>' 
				)	
				$(document).keydown( function(event) {
					$('#timer').html('');
					$("#type").html('')
					$('#score').html(score)
					$('#scoreboard').html(
						'<p>PERFECT: '+ hitTypes['PERFECT'] + '</p>' +
						'<p>GREAT: '+ hitTypes['GREAT'] + '</p>' +
						'<p>GOOD: '+ hitTypes['GOOD'] + '</p>' +
						'<p>COOL: '+ hitTypes['COOL'] + '</p>' +
						'<p>BAD: '+ hitTypes['BAD'] + '</p>' +
						'<p>MISS: '+ hitTypes['MISS'] + '</p>' 
					)	
					if(notes[0]) {
						if (event.keyCode == 37 && notes[0].direction == "left") {
							event.preventDefault();
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}			
						}
						if (event.keyCode == 38 && notes[0].direction == "up") {
							event.preventDefault();
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}	
						}
						if (event.keyCode == 40 && notes[0].direction == "down") {
							event.preventDefault();
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}	
						}
						if (event.keyCode == 39 && notes[0].direction == "right") {
							event.preventDefault();
							if (notes[0].image.position().top > 5 && notes[0].image.position().top < 15) {
								hitbox('PERFECT', 20);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 20) {
								hitbox('GREAT', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 30) {
								hitbox('GOOD', 10);
							} else if (notes[0].image.position().top > 0 && notes[0].image.position().top < 35) {
								hitbox('COOL', 5);
							} else if(notes[0].image.position().top > 0 && notes[0].image.position().top < 45) {
								hitbox('BAD', 0);
							} else	{
								$("#type").html('MISS')
								hitTypes['MISS']++;
								streak = false;
								score -=10;
							}	
						}
					}
				});
			} 
					
		})
});


</script>

		
	</body>
</html>
